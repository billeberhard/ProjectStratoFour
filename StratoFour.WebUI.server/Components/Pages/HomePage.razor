@page "/"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components.Authorization
@using StratoFour.Application.Helpers
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="row">
    <div class="col-12 d-flex justify-content-between align-items-center">
        <h2 class="fw-bolder">Welcome to <span class="text-danger">StratoFour</span></h2>
        <button class="btn btn-secondary" @onclick="HandleSettingsClick">Settings</button>
    </div>
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <AuthorizeView>
                    <NotAuthorized>
                        <span>You are not logged in. Please <a class="fw-bolder" href="/login">click here</a></span>
                    </NotAuthorized>
                    <Authorized>
                        <span>Logged in as <b>@userName</b> <a class="fw-bolder" href="/logout"></a>  </span>
                        <div class="mt-3">
                            <label>
                                <input type="radio" name="gameType" value="singleplayer" checked="@((selectedGameType == "singleplayer"))" @onchange="OnGameTypeChanged">
                                Singleplayer
                            </label>
                            <label class="ms-3">
                                <input type="radio" name="gameType" value="multiplayer" checked="@((selectedGameType == "multiplayer"))" @onchange="OnGameTypeChanged">
                                Multiplayer
                            </label>
                            <label class="ms-3">
                                <input type="radio" name="gameType" value="botplayer" checked="@((selectedGameType == "botplayer"))" @onchange="OnGameTypeChanged">
                                Let Bot play
                            </label>
                        </div>
                        <button class="btn btn-primary btn-lg mt-3" style="width: 30%;" @onclick="HandleNewGame">New Game</button>
                    </Authorized>
                </AuthorizeView>
            </div>
        </div>
    </div>
</div>


@code {
    private string selectedGameType = "singleplayer";
    private string userName;

    protected override async Task OnInitializedAsync()
    {
        userName = await AuthService.GetUsernameAsync();
    }

    private void HandleNewGame()
    {
        switch (selectedGameType)
        {
            case "multiplayer":
                NavManager.NavigateTo("queue");
                break;
            case "singleplayer":
                var query = new Dictionary<string, string>
                {
                    {"name", userName }, {"color", ColorHelper.GetBluePlanetColor()}, {"level", "singleplayer"}
                };
                NavManager.NavigateTo(QueryHelpers.AddQueryString("game", query));
                break;
            case "botplayer":
                var query2 = new Dictionary<string, string>
                {
                    {"name", "Stratofour Bot" }, {"color", ColorHelper.GetBluePlanetColor()}, {"level", "botvsbot"}
                };
                NavManager.NavigateTo(QueryHelpers.AddQueryString("game", query2));
                break;

        }
    }

    private void HandleSettingsClick()
    {
        NavManager.NavigateTo("settings");
    }

    private void OnGameTypeChanged(ChangeEventArgs e)
    {
        selectedGameType = e.Value.ToString();
    }

}
