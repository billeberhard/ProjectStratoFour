@page "/"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.AspNetCore.Components.Authorization
@using StratoFour.Application.Helpers
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>HomePage</h3>

<div class="row">
    <div class="col-12">
        <h2 class="fw-bolder">Welcome to <span class="text-danger">StratoFour</span></h2>
    </div>
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <AuthorizeView>
                    <NotAuthorized>
                        <span>You are not logged in. Please <a class="fw-bolder" href="/login">click here</a></span>
                    </NotAuthorized>
                    <Authorized>
                        <span>Logged in as <b>@userName</b><a class="fw-bolder" href="/logout"></a>  </span>
                        <button @onclick="@(async () => await SendRequest(1))">Verbindungstest Spieler1</button>
                        <button @onclick="@(async () => await SendRequest(2))">Verbindungstestp Spieler2</button>
                        <button @onclick="HandleNewGame">New Game</button>
                    </Authorized>
                </AuthorizeView>
            </div>
        </div>
    </div>

</div>


@code {
    private string userName;

    protected override async Task OnInitializedAsync()
    {
        userName = await AuthService.GetUsernameAsync();
    }

    private async Task SendRequest(int player)
    {
        var factory = new MQTTnet.MqttFactory();
        var mqttClient = factory.CreateMqttClient();

        var options = new MQTTnet.Client.MqttClientOptionsBuilder()
            .WithTcpServer("localhost", 1883) // Hier die IP-Adresse und Portnummer des MQTT-Brokers eintragen
            .Build();

        await mqttClient.ConnectAsync(options);
        string playerCommand = "4$" + player.ToString();
        var message = new MQTTnet.MqttApplicationMessageBuilder()
            .WithTopic("send_from_app/position") // Hier das Topic eintragen, über das der Roboter Nachrichten empfängt
            .WithPayload(playerCommand)
            .WithRetainFlag()
            .Build();

        await mqttClient.PublishAsync(message);

        await mqttClient.DisconnectAsync(null);
    }

    private void HandleNewGame()
    {
        var query = new Dictionary<string, string> {
            { "name", userName }, { "color",  ColorHelper.GetBluePlanetColor() }
    };

        NavManager.NavigateTo(QueryHelpers.AddQueryString("game", query));
    }
}

