@page "/login"

@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using StratoFour.Application.ViewModels
@using StratoFour.Infrastructure.Data
@using System.Security.Claims
@inject IUserData UserData
@inject NavigationManager navigationManager

<h3>LoginPage</h3>

<div class="row">
    <div class="col-md-4">
        <section>
            @* <StatusMessage Message="@errorMessage" /> *@
            <EditForm Model="@Model" @* method="post" *@ OnValidSubmit="Authenticate" FormName="LoginForm">
                <DataAnnotationsValidator />
                <hr />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Model.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label for="email" class="form-label">Email</label>
                    <ValidationMessage For="() => Model.Email" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Model.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label for="password" class="form-label">Password</label>
                    <ValidationMessage For="() => Model.Password" class="text-danger" />
                </div>
                <div class="checkbox mb-3">
                    <label class="form-label">
                        <InputCheckbox @bind-Value="Model.RememberMe" class="darker-border-checkbox form-check-input" />
                        Remember me
                    </label>
                </div>
                <div class="mb-3 text-center">
                    <span class="text-danger">@errorMessage</span>
                </div>
                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>
                <div>
                    <p>
                        <a href="/register">Register as a new user</a>
                    </p>
                </div>
            </EditForm>
        </section>
    </div>
</div>

@code {
    [CascadingParameter]
    public HttpContext? HttpContext {get; set; }

    [SupplyParameterFromForm]
    public LoginViewModel Model { get; set; } = new();
    private string? errorMessage; 

    private async Task Authenticate()
    {
        var userAccount = await UserData.GetUserByEmail(Model.Email); 
        if (userAccount is null || userAccount.PasswordHash != Model.Password)
        {
            errorMessage = "Invalid User Name or Password";
            return; 
        }

        var claims = new List<Claim>
        {
            new Claim(ClaimTypes.Email, Model.Email),
            // new Claim(ClaimTypes.Role, userAccount.Role)
        };

        var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var principal = new ClaimsPrincipal(identity);
        await HttpContext.SignInAsync(principal);
        navigationManager.NavigateTo("/"); 
    }
}
